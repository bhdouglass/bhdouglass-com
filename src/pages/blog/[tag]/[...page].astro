---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { categoriesToTags, sortPosts, tagTitleCase } from '../../../utilities';
import { BLOG } from '../../../constants';
import Hero from '../../../components/Hero.astro';
import BlogList from '../../../components/BlogList.astro';
import { Page } from 'astro';
import { CollectionEntry, getCollection } from 'astro:content';

export type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

export async function getStaticPaths({ paginate }) {
  const blogEntries = await getCollection('blog', (post): post is CollectionEntry<"blog"> => !post.data.draft || process.env.NODE_ENV === 'development');
  const posts = sortPosts(blogEntries);

  const categories = Array.from(new Set(posts.reduce((acc, cur) => {
    return [...acc, ...categoriesToTags(cur.data.categories)];
  }, []))).filter((category) => !!category);

  return categories.flatMap((tag) => {
    const filteredPosts = posts.filter((post) => post.data.categories && post.data.categories.includes(tag));
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 15
    });
  });
}

const { page } = Astro.props;
const { tag } = Astro.params;
---

<BaseLayout pageTitle={`${BLOG.title} | ${tagTitleCase(tag)} | Page ${page.currentPage}`} title={`${BLOG.title} - ${tagTitleCase(tag)} (Page ${page.currentPage})`} siteName={BLOG.title} description={BLOG.tagline} noindex={true}>
  <Hero header={BLOG.title}>
    <h2>by Brian Douglass</h2>
    <h3>{BLOG.tagline}</h3>
  </Hero>

  <BlogList
    posts={page.data}
    nextUrl={page.url.next}
    prevUrl={page.url.prev}
    tag={tag}
  />
</BaseLayout>

