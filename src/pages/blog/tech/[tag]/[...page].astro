---
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import BlogIndex from '../../../../components/BlogIndex.astro';
import { categoriesToTags, sortPosts, tagTitleCase } from '../../../../utilities';
import { TECH_BLOG } from '../../../../constants';

import '../../../../styles/blog.css';

export async function getStaticPaths({ paginate }) {
  let posts = sortPosts(await Astro.glob('../*.md'));

  const categories = Array.from(new Set(posts.reduce((acc, cur) => {
    return [...acc, ...categoriesToTags(cur.frontmatter.categories)];
  }, []))).filter((category) => !!category);

  return categories.map((tag) => {
    const filteredPosts = posts.filter((post) => post.frontmatter.categories && post.frontmatter.categories.includes(tag));
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 30
    });
  });
}

const { page } = Astro.props;
const { tag } = Astro.params;
---

<BaseLayout title={`${TECH_BLOG.title} | ${tagTitleCase(tag)} Page ${page.currentPage}`} feedUrl={TECH_BLOG.feedUrl} siteName={TECH_BLOG.title}>
  <BlogIndex
    title={TECH_BLOG.title}
    tagline={TECH_BLOG.tagline}
    posts={page.data}
    nextUrl={page.url.next}
    prevUrl={page.url.prev}
    feedUrl={TECH_BLOG.feedUrl}
    tag={tag}
  />
</BaseLayout>
