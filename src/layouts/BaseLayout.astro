---
import { SEO } from 'astro-seo';
import '../styles/base.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Verification from '../components/Verification.astro';
import { generateSchema } from '../schema.utilities';

export type Props = {
  pageTitle: string;
  title: string;
  prism?: boolean;
  description: string;
  siteName?: string;
  image?: string;
  imageAlt?: string;
  noindex?: boolean;
  schema?: Record<string, any>;
};

const { pageTitle, title, prism, description, siteName, image, imageAlt, noindex, schema } = Astro.props;

const actualSchema = schema ?? generateSchema(Astro.url.href, title);
const articleData = actualSchema['@graph'].find((s) => s['@type'] === 'Article');
const ogArticleData = articleData ? {
  publishedTime: articleData.datePublished,
  modifiedTime: articleData.updatedDate,
  author: articleData.author.name,
  tags: articleData.keywords,
} : undefined;
const ogImage = new URL(image ?? '/images/logo.webp', import.meta.env.SITE).href;
const ogImageAlt = imageAlt || "Brian Douglass' logo";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <Verification />

    <SEO
      title={pageTitle}
      description={description}
      noindex={noindex ?? false}
      openGraph={{
        basic: {
          title,
          type: articleData ? 'article' : 'website',
          image: ogImage,
        },
        optional: {
          siteName: siteName || 'Brian Douglass',
          locale: 'en_US',
        },
        image: {
          alt: ogImageAlt,
        },
        article: ogArticleData,
      }}
      twitter={{
        creator: '@bhdouglass',
        card: 'summary',
        title,
        image: ogImage,
        imageAlt: ogImageAlt,
        description,
      }}
    />

    <link rel="icon" href="/favicon.ico">
    <link rel="alternate" href="/feeds/tech.xml" type="application/rss+xml" title="RSS feed">

    {prism && (<link rel="stylesheet" href="/css/prism.css" />)}

    <script type="application/ld+json" set:html={JSON.stringify(actualSchema)} />

    <script defer data-domain="bhdouglass.com" src="https://stats.bhdouglass.com/js/script.tagged-events.outbound-links.js"></script>
    <script is:inline>window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }</script>
  </head>

  <body class="antialiased text-gray-900 dark:text-slate-300 tracking-tight bg-white dark:bg-slate-900">
    <Header />
    <slot/>
    <Footer />

    <script is:inline>
      function applyTheme(theme) {
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        }
        else {
          document.documentElement.classList.remove('dark');
        }
      }

      function attachEvent(selector, event, fn) {
        const matches = typeof selector === 'string' ? document.querySelectorAll(selector) : selector;
        if (matches && matches.length) {
          matches.forEach((elem) => {
            elem.addEventListener(event, (e) => fn(e, elem), false);
          });
        }
      }

      if (
        localStorage.theme === 'dark' ||
        (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        applyTheme('dark');
      }
      else {
        applyTheme('light');
      }

      window.onload = function() {
        attachEvent('[data-toggle-menu]', 'click', function (_, elem) {
          elem.classList.toggle('expanded');
          document.body.classList.toggle('overflow-hidden');
          document.getElementById('header')?.classList.toggle('h-screen');
          document.querySelector('#header nav')?.classList.toggle('hidden');
        });

        attachEvent('[data-toggle-color-scheme]', 'click', function () {
          document.documentElement.classList.toggle('dark');
          localStorage.theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
        });
      };
    </script>
  </body>
</html>
