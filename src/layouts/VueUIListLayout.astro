---
import BlogPostLayout from './BlogPostLayout.astro';
import { format, parseISO } from 'date-fns';
import projects from '../data/vue-ui-frameworks.json';

import TableOfContents from '../components/TableOfContents.vue';
import SelectorToggle from '../components/SelectorToggle.vue';
import { Frontmatter } from '../types';
import TextSection from '../components/TextSection.astro';

export type Props = {
  frontmatter: Frontmatter;
};

const { frontmatter } = Astro.props;

async function updateGitHubInfo(project) {
  const response = await fetch(`https://api.github.com/repos/${project.githubRepo}`, {
    headers: { 'Authorization': `Bearer ${import.meta.env.GITHUB_TOKEN}` }
  });
  const githubData = await response.json();

  if (response.status !== 200) {
    throw new Error(`Error fetching https://api.github.com/repos/${project.githubRepo}: ${JSON.stringify(githubData)}`);
  }


  return { ...project, github: githubData };
}

async function updateNpmInfo(project) {
  if (!project.npmPackage) {
    return project;
  }

  const response = await fetch(`https://registry.npmjs.com/${project.npmPackage}`);
  const npmData = await response.json();

  if (response.status !== 200) {
    throw new Error(`Error fetching https://registry.npmjs.com/${project.npmPackage}: ${JSON.stringify(npmData)}`);
  }

  const downloadsResponse = await fetch(`https://api.npmjs.org/downloads/point/last-month/${project.npmPackage}`);
  const downloadsData = await downloadsResponse.json();

  const pageResponse = await fetch(`https://www.npmjs.com/package/${project.npmPackage}`);
  const pageText = await pageResponse.text();
  const typescript = (
    pageText.includes('This package contains built-in TypeScript declarations') ||
    pageText.includes('This package has TypeScript declarations provided by')
  );

  return { ...project, npm: { ...npmData, downloads: downloadsData, typescript } };
}

const enrichedProjects = await Promise.all(projects.filter((project) => Boolean(project.name)).map((project) => {
  return updateGitHubInfo(project).then((updatedProject) => {
    return updateNpmInfo(updatedProject);
  });
}));

enrichedProjects.sort((a, b) => {
  if (!a.github.stargazers_count) {
    console.log(a.github);
  }

  if (a.github.stargazers_count > b.github.stargazers_count) return -1;
  if (a.github.stargazers_count < b.github.stargazers_count) return 1;
  return 0;
})

// TODO add chart from: https://npmtrends.com/canvas-vs-commander-vs-express-vs-mocha
---

<BlogPostLayout frontmatter={frontmatter}>
  <slot />

  <div class="mb-4">
    <TableOfContents client:load>
      <ol>
        {enrichedProjects.map((project) => (
          <li>
            <a href={`#${project.githubRepo.replace('/', '-')}`}>{project.name}</a>
          </li>
        ))}
      </ol>
    </TableOfContents>
  </div>

  <div class="mb-4">
    <SelectorToggle
      client:load
      hide-label="Show only Vue 3 libraries"
      show-label="Show all libraries"
      selector=".no-vue3"
    />
  </div>

  {enrichedProjects.map((project) => (
    <div class={project.vue3 ? '' : 'no-vue3'}>
      <a id={project.githubRepo.replace('/', '-')}></a>
      <TextSection header={project.name}>
        <ul class="text-sm !pl-0">
          <li class={`${project.vue3 ? '' : 'line-through'} bg-gray-100 dark:bg-slate-700 inline-block mr-2 mb-2 py-0.5 px-2 lowercase font-medium text-gray-600 dark:text-slate-300 hover:text-primary-800 dark:hover:text-gray-200`}>
            {project.vue3 ? '' : 'No'} Vue 3 Support
          </li>
          <li class={`${project.npm?.typescript ? '' : 'line-through'} bg-gray-100 dark:bg-slate-700 inline-block mr-2 mb-2 py-0.5 px-2 lowercase font-medium text-gray-600 dark:text-slate-300 hover:text-primary-800 dark:hover:text-gray-200`}>
            {project.npm?.typescript ? '' : 'No'} Typescript Definitions
          </li>
        </ul>

        From the project: {project.description}
      </TextSection>

      <div class="flex flex-col max-w-6xl mx-auto px-4 sm:px-6">
        <div class="flex flex-col md:flex-row justify-between w-full">
          <div class="w-full" title="GitHub Stars">
            <i class="ri-star-line mr-1"></i>
            {project.github.stargazers_count.toLocaleString()}
          </div>
          <div class="w-full md:text-center" title="NPM Downloads (last 30 days)">
            <i class="ri-download-cloud-2-line mr-1"></i>
            {project.npm?.downloads?.downloads?.toLocaleString() ?? '-'}
          </div>
          <div class="w-full md:text-right" title="Version">
            <i class="ri-code-box-line mr-1"></i>
            {project.npm ? project.npm['dist-tags'].latest : '-'}
          </div>
        </div>

        <div class="flex flex-col md:flex-row justify-between w-full">
          <div class="w-full">Updated: {format(parseISO(project.github.pushed_at), 'MMM, yyyy')}</div>
          <div class="w-full md:text-center">Created: {format(parseISO(project.github.created_at), 'MMM, yyyy')}</div>
          <div class="w-full md:text-right">
            License: {project.github.license ? (<a href={project.github.license.url}>{project.github.license.name.replace('License', '').trim()}</a>) : 'Unknown'}
          </div>
        </div>

        <div class="flex flex-col md:flex-row justify-between w-full">
          <div class="w-full">
            {!project.hideWebsite && (
              <i class="ri-link mr-1"></i>
              <a href={project.github.homepage}>Website</a>
            )}
          </div>
          <div class="w-full md:text-center">
            <i class="ri-github-fill mr-1"></i>
            <a href={project.github.html_url}>GitHub</a>
          </div>
          <div class="w-full md:text-right">
            <i class="ri-npmjs-fill mr-1"></i>
            <a href={`https://www.npmjs.com/package/${project.npmPackage}`}>NPM</a>
          </div>
        </div>
      </div>
    </div>
  ))}
</BlogPostLayout>
