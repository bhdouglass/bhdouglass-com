---
import { type CollectionEntry } from "astro:content";
import { format } from "date-fns";
import { categoriesToTags, getBlogDate } from "../utilities";
import PostTags from "./PostTags.astro";
import sizeOf from "image-size";

export type Props = {
  post: CollectionEntry<"blog">;
  slim?: boolean;
};

const { post, slim } = Astro.props;
const image = post.data.image;
const size = sizeOf(`./public${image}`);
const link = `/blog/${post.id}/`;
const date = getBlogDate(post.data.date, post.data.updatedDate);
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? "md:grid-cols-2" : ""} ${slim ? "mb-6" : ""}`}>
  {
    image && (
      <a class="relative block group" href={link ?? "javascript:void(0)"}>
        <div
          class={`${slim ? "" : "relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%]"} overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg`}
        >
          {image && (
            <img
              src={image}
              class={`${slim ? "" : "absolute mb-6"} inset-0 object-cover w-full h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700`}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.data.title}
              width={size.width}
              height={size.height}
              loading="lazy"
            />
          )}
        </div>
      </a>
    )
  }
  <div class="mt-2">
    <header>
      {
        !slim && (
          <div class="mb-1">
            <span class="text-sm">
              <time datetime={date}>{format(new Date(date), "MMMM d, yyyy")}</time>
            </span>
          </div>
        )
      }
      <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading text-gray-700 dark:text-slate-300">
        {
          link ? (
            <a class="hover:text-primary-800 dark:hover:text-primary-700 transition ease-in duration-200 underline" href={link}>
              {post.data.title}
            </a>
          ) : (
            post.data.title
          )
        }

        {post.data.draft && "(DRAFT)"}
      </h2>
    </header>

    {post.data.description && <p class="flex-grow text-gray-500 dark:text-slate-400 text-lg">{post.data.description}</p>}
    {
      !slim && (
        <footer class="mt-5">
          <PostTags tags={categoriesToTags(post.data.categories)} />
        </footer>
      )
    }
  </div>
</article>
